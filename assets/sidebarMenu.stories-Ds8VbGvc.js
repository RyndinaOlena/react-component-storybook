import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{r as l}from"./iframe-BB-KQ4PV.js";import"./preload-helper-PPVm8Dsz.js";const m="_backdrop_93qj7_1",b="_panel_93qj7_6",_="_out_93qj7_19",h="_child_93qj7_22",s={backdrop:m,panel:b,in:"_in_93qj7_16",out:_,child:h};function c({open:a,onClose:r,items:o}){return l.useEffect(()=>{const t=i=>i.key==="Escape"&&r();return window.addEventListener("keydown",t),()=>window.removeEventListener("keydown",t)},[r]),e.jsxs(e.Fragment,{children:[a&&e.jsx("div",{className:s.backdrop,onClick:r}),e.jsx("aside",{className:`${s.panel} ${a?s.in:s.out}`,children:e.jsx("nav",{children:o.map((t,i)=>e.jsxs("details",{children:[e.jsx("summary",{children:t.label}),t.children?.map((u,p)=>e.jsx("div",{className:s.child,children:u.label},p))]},i))})})]})}c.__docgenInfo={description:"",methods:[],displayName:"SidebarMenu",props:{open:{required:!0,tsType:{name:"boolean"},description:""},onClose:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},items:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ label: string; children?: MenuItem[] }",signature:{properties:[{key:"label",value:{name:"string",required:!0}},{key:"children",value:{name:"Array",elements:[{name:"MenuItem"}],raw:"MenuItem[]",required:!1}}]}}],raw:"MenuItem[]"},description:""}}};const x={title:"Navigation/SidebarMenu",component:c,parameters:{layout:"centered"}},d=[{label:"Dashboard"},{label:"Products",children:[{label:"List"},{label:"Create"}]},{label:"Settings"}],n=a=>{const[r,o]=l.useState(!1);return e.jsxs(e.Fragment,{children:[e.jsx("button",{onClick:()=>o(!0),children:"Open Menu"}),e.jsx(c,{...a,open:r,onClose:()=>o(!1),items:d})]})};n.args={items:d};n.__docgenInfo={description:"",methods:[],displayName:"Basic"};n.parameters={...n.parameters,docs:{...n.parameters?.docs,source:{originalSource:`args => {
  const [open, setOpen] = useState(false);
  return <>
      <button onClick={() => setOpen(true)}>Open Menu</button>
      <SidebarMenu {...args} open={open} onClose={() => setOpen(false)} items={items} />
    </>;
}`,...n.parameters?.docs?.source}}};const f=["Basic"];export{n as Basic,f as __namedExportsOrder,x as default};
